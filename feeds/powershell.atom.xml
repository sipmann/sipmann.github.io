<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sipmann - PowerShell</title><link href="https://www.sipmann.com/" rel="alternate"></link><link href="https://www.sipmann.com/feeds/powershell.atom.xml" rel="self"></link><id>https://www.sipmann.com/</id><updated>2020-12-21T13:30:00-03:00</updated><subtitle></subtitle><entry><title>Monitoring MySQL restarts with PowerShell</title><link href="https://www.sipmann.com/monitoring-mysql-restarts-with-powershell.html" rel="alternate"></link><published>2020-12-21T13:30:00-03:00</published><updated>2020-12-21T13:30:00-03:00</updated><author><name>Maurício Camargo Sipmann</name></author><id>tag:www.sipmann.com,2020-12-21:/monitoring-mysql-restarts-with-powershell.html</id><summary type="html">&lt;p&gt;Hey folks, it's time for another PowerShell script. If you haven't seen the other ones, check the links below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sipmann.com/en/monitoring-mysql-replication-with-powershell.html"&gt;Monitoring MySQL replication with PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well, this one it's a pretty simple script, but again, if your customer doesn't have a Zabbix server or doesn't allow you to setup one to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hey folks, it's time for another PowerShell script. If you haven't seen the other ones, check the links below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sipmann.com/en/monitoring-mysql-replication-with-powershell.html"&gt;Monitoring MySQL replication with PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Well, this one it's a pretty simple script, but again, if your customer doesn't have a Zabbix server or doesn't allow you to setup one to do the monitoring, a set of scripts can be handy. We start executing some basic query &lt;code&gt;SHOW GLOBAL STATUS LIKE 'Uptime'&lt;/code&gt;, with that we'll get exactly what we're looking for.&lt;/p&gt;
&lt;p&gt;If for some reason, the command fails (watch for the "global" variable called &lt;code&gt;$lastExitCode&lt;/code&gt;), we send an e-mail telling you about that connection problem.&lt;/p&gt;
&lt;p&gt;And then, we get to the part where we parse the value, this one is pretty similar to the parse we did on the first post about using PowerShell to monitor MySQL. But we basically look for the Value line, split it by space and then parse the second position to an integer. And then all we have to do is check if the uptime is lower than our threshold, if it is we send an e-mail.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$MailFrom&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;maurio[at]sipmann.com&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MailTo&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mauricio[at]sipmann.com&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlHost&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlPass&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;123&amp;#39;&lt;/span&gt;


&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;-h&lt;/span&gt; &lt;span class="nv"&gt;$MysqlHost&lt;/span&gt; &lt;span class="n"&gt;-u&lt;/span&gt; &lt;span class="nv"&gt;$MysqlUser&lt;/span&gt; &lt;span class="n"&gt;-p&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$MysqlPass&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SHOW GLOBAL STATUS LIKE &amp;#39;Uptime&amp;#39; \G&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cm"&gt;&amp;lt;# Unable to execute the sql Command #&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lastExitCode&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Send-MailMessage&lt;/span&gt; &lt;span class="n"&gt;-To&lt;/span&gt; &lt;span class="nv"&gt;$MailTo&lt;/span&gt; &lt;span class="n"&gt;-From&lt;/span&gt; &lt;span class="nv"&gt;$MailFrom&lt;/span&gt;  &lt;span class="n"&gt;-Subject&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Connection problem&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-bodyAsHtml&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Connection problem on host ${MysqlHost}&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Credential&lt;/span&gt; &lt;span class="nb"&gt;Get-Credential&lt;/span&gt; &lt;span class="n"&gt;-SmtpServer&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.office365.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Port&lt;/span&gt; &lt;span class="n"&gt;587&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$UpTime&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Value:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cm"&gt;&amp;lt;# If the uptime is lower then 20 minutes #&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UpTime&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="n"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Send-MailMessage&lt;/span&gt; &lt;span class="n"&gt;-To&lt;/span&gt; &lt;span class="nv"&gt;$MailTo&lt;/span&gt; &lt;span class="n"&gt;-From&lt;/span&gt; &lt;span class="nv"&gt;$MailFrom&lt;/span&gt; &lt;span class="n"&gt;-Subject&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL Restarted&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-bodyAsHtml&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL host ${MysqlHost} restarted less than 20 minutes ago&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Credential&lt;/span&gt; &lt;span class="nb"&gt;Get-Credential&lt;/span&gt; &lt;span class="n"&gt;-SmtpServer&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.office365.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Port&lt;/span&gt; &lt;span class="n"&gt;587&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This script (and the other ones I use) is available at my GitHub &lt;a href="https://github.com/sipmann/PowerShellScripts"&gt;here&lt;/a&gt;. Keep in mind that the ones on the GitHub repo, are a little different from here.&lt;/p&gt;</content><category term="PowerShell"></category><category term="MySQL"></category><category term="MySQL Restart"></category><category term="Powershell monitoring"></category></entry><entry><title>Monitoring MySQL Replication Status with PowerShell</title><link href="https://www.sipmann.com/monitoring-mysql-replication-with-powershell.html" rel="alternate"></link><published>2020-10-14T19:00:00-03:00</published><updated>2020-10-14T19:00:00-03:00</updated><author><name>Maurício Camargo Sipmann</name></author><id>tag:www.sipmann.com,2020-10-14:/monitoring-mysql-replication-with-powershell.html</id><summary type="html">&lt;p&gt;I've been migration some bash scripts that I have to PowerShell, and it's time to migrate a script that monitors the replication of a MySQL database. The credit for the original script goes to &lt;a href="https://handyman.dulare.com/mysql-replication-status-alerts-with-bash-script/"&gt;Paweł&lt;/a&gt;. It's a simple script where I seek a few tags/fields that we get from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been migration some bash scripts that I have to PowerShell, and it's time to migrate a script that monitors the replication of a MySQL database. The credit for the original script goes to &lt;a href="https://handyman.dulare.com/mysql-replication-status-alerts-with-bash-script/"&gt;Paweł&lt;/a&gt;. It's a simple script where I seek a few tags/fields that we get from &lt;code&gt;SHOW SLAVE STATUS\G&lt;/code&gt; command, the fields are. &lt;code&gt;Slave_IO_Running&lt;/code&gt;, &lt;code&gt;Slave_SQL_Running&lt;/code&gt;, and &lt;code&gt;Seconds_Behind_Master&lt;/code&gt;. I still need to figure out the proper way to store/read variables like usernames and passwords, if you have any tips, feel free to even make a pull request (&lt;a href="https://github.com/sipmann/PowerShellScripts"&gt;here&lt;/a&gt;) at the git where I'll store some scripts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="cm"&gt;   Variables definition&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;$MaxSeconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;120&lt;/span&gt;  &lt;span class="c"&gt;# Max seconds behind master allowed&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlUser&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlPass&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="nv"&gt;$MailTo&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mauricio@sipmann.com&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MailFrom&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mauricio@sipmann.com&amp;#39;&lt;/span&gt;


&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;-u&lt;/span&gt; &lt;span class="nv"&gt;$MysqlUser&lt;/span&gt; &lt;span class="n"&gt;-p&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$MysqlPass&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SHOW SLAVE STATUS \G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;#Debug data&lt;/span&gt;
&lt;span class="c"&gt;#$data = Get-Content &amp;#39;c:\temp\sampleresult.txt&amp;#39;&lt;/span&gt;

&lt;span class="cm"&gt;&amp;lt;# Parse the data #&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;$IORunning&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Slave_IO_Running:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$SQLRunning&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Slave_SQL_Running:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$LastErrNo&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Last_Errno&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$SecondsBh&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Seconds_Behind_Master&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$IORunning&lt;/span&gt; &lt;span class="o"&gt;-Eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-Or&lt;/span&gt; &lt;span class="nv"&gt;$SQLRunning&lt;/span&gt; &lt;span class="o"&gt;-Eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-Or&lt;/span&gt; &lt;span class="nv"&gt;$SecondsBh&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="nv"&gt;$MaxSeconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;h1&amp;gt;Problema na replicação&amp;lt;/h1&amp;gt;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;

    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;    IO Running: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$IORunning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;   SQL Running: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$SQLRunning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Seconds Behind: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$SecondsBh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;   Last Err No: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$LastErrNo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;# Send e-mail, maybe some telegram message here too #&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;Send-MailMessage&lt;/span&gt; &lt;span class="n"&gt;-To&lt;/span&gt; &lt;span class="nv"&gt;$MailTo&lt;/span&gt; &lt;span class="n"&gt;-From&lt;/span&gt; &lt;span class="nv"&gt;$MailFrom&lt;/span&gt;  &lt;span class="n"&gt;-Subject&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Problemas na replicação&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-bodyAsHtml&lt;/span&gt; &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="n"&gt;-Credential&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-Credential&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-SmtpServer&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.office365.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Port&lt;/span&gt; &lt;span class="n"&gt;587&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;Else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Up and running&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="PowerShell"></category><category term="MySQL"></category><category term="MySQL Replication"></category><category term="PowerShell"></category><category term="Powershell mail"></category></entry><entry><title>The power of PowerShell</title><link href="https://www.sipmann.com/the-power-of-powershell.html" rel="alternate"></link><published>2020-09-21T19:00:00-03:00</published><updated>2020-09-21T19:00:00-03:00</updated><author><name>Maurício Camargo Sipmann</name></author><id>tag:www.sipmann.com,2020-09-21:/the-power-of-powershell.html</id><summary type="html">&lt;p&gt;As a long time Linux user, I've automated a few things with bash scripts and stayed away from PowerShell... I've moved to a Windows environment a few years ago and still, haven gave a shot to PS. But why not? I've made a few scripts to automate some tasks at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As a long time Linux user, I've automated a few things with bash scripts and stayed away from PowerShell... I've moved to a Windows environment a few years ago and still, haven gave a shot to PS. But why not? I've made a few scripts to automate some tasks at a Protheus server.&lt;/p&gt;
&lt;p&gt;I found the PS scripts being easy to read and understand. Bellow, we have a script to remove files filtering their extension (or no extension at all like the following script). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\TOTVS\protheus_data\system&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-File&lt;/span&gt; &lt;span class="n"&gt;-Filter&lt;/span&gt; &lt;span class="p"&gt;*.&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Move-Item&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt; &lt;span class="n"&gt;-Destination&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="cm"&gt;&amp;lt;# Diretory where the files will be moved. You can use Date formats to help name it #&amp;gt;&lt;/span&gt;
    &lt;span class="cm"&gt;&amp;lt;# LastWriteTime proprtie from the current file #&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\bad_files\{0:yyyy\\MM\\dd}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;
    &lt;span class="nv"&gt;$null&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt; 
    &lt;span class="s2"&gt;&amp;quot;$dir\&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have you ever been in the need to remove files based on other file content? Bello a script where I read a file that has the names of files that I want to remove. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="p"&gt;.\&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bad_files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\\x.y.z.a\c$\TOTVS\protheus_data\xmls\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Remove-Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\\x.y.z.a\c$\TOTVS\protheus_data\xmls\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; - File not found&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And a bonus script to stop/start services (if you handle some Protheus Server, you know why I do that).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$servicesNames&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;app_main&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker5&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stoping Services&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--------------------------&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$srv&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$servicesNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stopping: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;
    &lt;span class="nv"&gt;$SrvPID&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;get-wmiobject&lt;/span&gt; &lt;span class="n"&gt;win32_service&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;where &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;processID&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PID: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$SrvPID&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;# Force if the proccess is stucked #&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;Stop-Process&lt;/span&gt; &lt;span class="nv"&gt;$SrvPID&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PDI &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$SrvPID&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; stopped&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Starting Services&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--------------------------&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$srv&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$servicesNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Starting: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;
    &lt;span class="nb"&gt;Start-Service&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Do you have any automated script? Share with us :)&lt;/p&gt;</content><category term="PowerShell"></category><category term="Azure"></category><category term="PowerShell"></category><category term="Script"></category><category term="GetChild-Item"></category><category term="Remove-Item"></category><category term="Stop-Proccess"></category></entry></feed>