<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sipmann - PowerShell</title><link href="https://www.sipmann.com/pt/" rel="alternate"></link><link href="https://www.sipmann.com/feeds/powershell.atom.xml" rel="self"></link><id>https://www.sipmann.com/pt/</id><updated>2020-12-21T13:30:00-03:00</updated><subtitle></subtitle><entry><title>Monitorando restarts do MySQL com PowerShell</title><link href="https://www.sipmann.com/pt/monitoring-mysql-restarts-with-powershell.html" rel="alternate"></link><published>2020-12-21T13:30:00-03:00</published><updated>2020-12-21T13:30:00-03:00</updated><author><name>Maurício Camargo Sipmann</name></author><id>tag:www.sipmann.com,2020-12-21:/pt/monitoring-mysql-restarts-with-powershell.html</id><summary type="html">&lt;p&gt;Bom, chegou a hora para mais um script PowerShell. Se você ainda não viu os outros, de uma olhada no link abaixo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sipmann.com/pt/monitoring-mysql-replication-with-powershell.html"&gt;Monitorando status de replicação do MySQL com PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este aqui é um script bem simples, mas novamente, se seu cliente não possui um servidor Zabbix ou não permite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Bom, chegou a hora para mais um script PowerShell. Se você ainda não viu os outros, de uma olhada no link abaixo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sipmann.com/pt/monitoring-mysql-replication-with-powershell.html"&gt;Monitorando status de replicação do MySQL com PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Este aqui é um script bem simples, mas novamente, se seu cliente não possui um servidor Zabbix ou não permite que você configure um para realizar este monitoramento, um conjunto de scripts pode ser bem útil. Primeiramente nós executamos uma query báscia &lt;code&gt;SHOW GLOBAL STATUS LIKE 'Uptime'&lt;/code&gt;, com ela nós conseguimos capturar exatamente o que nós estamos procurando.&lt;/p&gt;
&lt;p&gt;Se por alguma razão o comando falhar (verificamos atravez da variábel global &lt;code&gt;$lastExitCode&lt;/code&gt;), nós mandamos um e-mail lhe avisando sobre o problema ocorrido.&lt;/p&gt;
&lt;p&gt;E então, nós chegamos à parte onde fazemos o parse do valor obtido, esta parte é bem similar ao parse que codificamos no primeiro post sobre monitoramento utilizando PowerShell. Nós basicamentes procuramos pela linha contendo &lt;code&gt;Value&lt;/code&gt;, separamos por espaço e então parseamos a segunda posição em um inteiro. Então tudo que precisamos fazer é verificar se o valor parseado é menor que o nosso threshold, se for menor, nós mandamos um e-mail.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$MailFrom&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;maurio[at]sipmann.com&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MailTo&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mauricio[at]sipmann.com&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlHost&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlPass&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;123&amp;#39;&lt;/span&gt;


&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;-h&lt;/span&gt; &lt;span class="nv"&gt;$MysqlHost&lt;/span&gt; &lt;span class="n"&gt;-u&lt;/span&gt; &lt;span class="nv"&gt;$MysqlUser&lt;/span&gt; &lt;span class="n"&gt;-p&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$MysqlPass&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SHOW GLOBAL STATUS LIKE &amp;#39;Uptime&amp;#39; \G&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="cm"&gt;&amp;lt;# Unable to execute the sql Command #&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$lastExitCode&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Send-MailMessage&lt;/span&gt; &lt;span class="n"&gt;-To&lt;/span&gt; &lt;span class="nv"&gt;$MailTo&lt;/span&gt; &lt;span class="n"&gt;-From&lt;/span&gt; &lt;span class="nv"&gt;$MailFrom&lt;/span&gt;  &lt;span class="n"&gt;-Subject&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Connection problem&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-bodyAsHtml&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Connection problem on host ${MysqlHost}&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Credential&lt;/span&gt; &lt;span class="nb"&gt;Get-Credential&lt;/span&gt; &lt;span class="n"&gt;-SmtpServer&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.office365.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Port&lt;/span&gt; &lt;span class="n"&gt;587&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;
    &lt;span class="n"&gt;exit&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$UpTime&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Value:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="cm"&gt;&amp;lt;# If the uptime is lower then 20 minutes #&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$UpTime&lt;/span&gt; &lt;span class="o"&gt;-lt&lt;/span&gt; &lt;span class="n"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Send-MailMessage&lt;/span&gt; &lt;span class="n"&gt;-To&lt;/span&gt; &lt;span class="nv"&gt;$MailTo&lt;/span&gt; &lt;span class="n"&gt;-From&lt;/span&gt; &lt;span class="nv"&gt;$MailFrom&lt;/span&gt; &lt;span class="n"&gt;-Subject&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL Restarted&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-bodyAsHtml&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MySQL host ${MysqlHost} restarted less than 20 minutes ago&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-Credential&lt;/span&gt; &lt;span class="nb"&gt;Get-Credential&lt;/span&gt; &lt;span class="n"&gt;-SmtpServer&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.office365.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Port&lt;/span&gt; &lt;span class="n"&gt;587&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Este script (e os outros que eu utilizo) estão disponíveis no meu GitHub &lt;a href="https://github.com/sipmann/PowerShellScripts"&gt;aqui&lt;/a&gt;. Tenha em mente que os scripts localizados no GitHub, são um pouco diferentes do que exibido aqui. Espero que tenha achado útil.&lt;/p&gt;</content><category term="PowerShell"></category><category term="MySQL"></category><category term="MySQL Restart"></category><category term="Powershell monitoring"></category></entry><entry><title>Monitorando status de replicação do MySQL com PowerShell</title><link href="https://www.sipmann.com/pt/monitoring-mysql-replication-with-powershell.html" rel="alternate"></link><published>2020-10-14T19:00:00-03:00</published><updated>2020-10-14T19:00:00-03:00</updated><author><name>Maurício Camargo Sipmann</name></author><id>tag:www.sipmann.com,2020-10-14:/pt/monitoring-mysql-replication-with-powershell.html</id><summary type="html">&lt;p&gt;Tenho migrado alguns scripts bash que tenho para PowerShell, e chegou a vez de migrar um script de monitoramento de replicação do MySQL. Fica como crédito o script original do &lt;a href="https://handyman.dulare.com/mysql-replication-status-alerts-with-bash-script/"&gt;Paweł&lt;/a&gt;. É um script bem simples onde eu verifico algumas tags resultantes do &lt;code&gt;SHOW SLAVE STATUS\G&lt;/code&gt;, são elas. &lt;code&gt;Slave_IO_Running …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Tenho migrado alguns scripts bash que tenho para PowerShell, e chegou a vez de migrar um script de monitoramento de replicação do MySQL. Fica como crédito o script original do &lt;a href="https://handyman.dulare.com/mysql-replication-status-alerts-with-bash-script/"&gt;Paweł&lt;/a&gt;. É um script bem simples onde eu verifico algumas tags resultantes do &lt;code&gt;SHOW SLAVE STATUS\G&lt;/code&gt;, são elas. &lt;code&gt;Slave_IO_Running&lt;/code&gt;, &lt;code&gt;Slave_SQL_Running&lt;/code&gt; e &lt;code&gt;Seconds_Behind_Master&lt;/code&gt;. Ainda preciso verificar formas mais corretas de armazenar/carregar as variáveis como usuários e senha, se tiver alguma dica, fique à vontade para inclusive fazer um pull request (&lt;a href="https://github.com/sipmann/PowerShellScripts"&gt;aqui&lt;/a&gt;) no repositório onde vou armazenar alguns dos meus scripts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;&amp;lt;#&lt;/span&gt;
&lt;span class="cm"&gt;   Variables definition&lt;/span&gt;
&lt;span class="cm"&gt;#&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;$MaxSeconds&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;120&lt;/span&gt;  &lt;span class="c"&gt;# Max seconds behind master allowed&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlUser&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MysqlPass&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;

&lt;span class="nv"&gt;$MailTo&lt;/span&gt;     &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mauricio@sipmann.com&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;$MailFrom&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mauricio@sipmann.com&amp;#39;&lt;/span&gt;


&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt; &lt;span class="n"&gt;-u&lt;/span&gt; &lt;span class="nv"&gt;$MysqlUser&lt;/span&gt; &lt;span class="n"&gt;-p&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;$MysqlPass&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SHOW SLAVE STATUS \G&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;#Debug data&lt;/span&gt;
&lt;span class="c"&gt;#$data = Get-Content &amp;#39;c:\temp\sampleresult.txt&amp;#39;&lt;/span&gt;

&lt;span class="cm"&gt;&amp;lt;# Parse the data #&amp;gt;&lt;/span&gt;
&lt;span class="nv"&gt;$IORunning&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Slave_IO_Running:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$SQLRunning&lt;/span&gt;  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Slave_SQL_Running:&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$LastErrNo&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Last_Errno&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;$SecondsBh&lt;/span&gt;   &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="no"&gt;[int]&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Where-Object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="o"&gt;-match&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Seconds_Behind_Master&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="n"&gt;-split&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\s+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="n"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$IORunning&lt;/span&gt; &lt;span class="o"&gt;-Eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-Or&lt;/span&gt; &lt;span class="nv"&gt;$SQLRunning&lt;/span&gt; &lt;span class="o"&gt;-Eq&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;No&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-Or&lt;/span&gt; &lt;span class="nv"&gt;$SecondsBh&lt;/span&gt; &lt;span class="o"&gt;-gt&lt;/span&gt; &lt;span class="nv"&gt;$MaxSeconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;h1&amp;gt;Problema na replicação&amp;lt;/h1&amp;gt;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;

    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;    IO Running: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$IORunning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;   SQL Running: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$SQLRunning&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Seconds Behind: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$SecondsBh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;
    &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="p"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;   Last Err No: &amp;#39;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$LastErrNo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;# Send e-mail, maybe some telegram message here too #&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;Send-MailMessage&lt;/span&gt; &lt;span class="n"&gt;-To&lt;/span&gt; &lt;span class="nv"&gt;$MailTo&lt;/span&gt; &lt;span class="n"&gt;-From&lt;/span&gt; &lt;span class="nv"&gt;$MailFrom&lt;/span&gt;  &lt;span class="n"&gt;-Subject&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Problemas na replicação&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-bodyAsHtml&lt;/span&gt; &lt;span class="nv"&gt;$MailBody&lt;/span&gt; &lt;span class="n"&gt;-Credential&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Get-Credential&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;-SmtpServer&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;smtp.office365.com&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;-Port&lt;/span&gt; &lt;span class="n"&gt;587&lt;/span&gt; &lt;span class="n"&gt;-UseSsl&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;Else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-Host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Up and running&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="PowerShell"></category><category term="MySQL"></category><category term="MySQL Replication"></category><category term="PowerShell"></category><category term="Powershell mail"></category></entry><entry><title>O poder do PowerShell</title><link href="https://www.sipmann.com/pt/the-power-of-powershell.html" rel="alternate"></link><published>2020-09-21T19:00:00-03:00</published><updated>2020-09-21T19:00:00-03:00</updated><author><name>Maurício Camargo Sipmann</name></author><id>tag:www.sipmann.com,2020-09-21:/pt/the-power-of-powershell.html</id><summary type="html">&lt;p&gt;Como um usuário linux por muito tempo, eu automatizei algumas tarefas com scripts bash e fiquei longe do PowerShell... Voltei a utilizar Windows alguns anos atrás e ainda assim, não dei uma chance ao PS. Mas porque não? Eu fiz alguns scripts para automatizar algumas tarefas em um servidor Protheus …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Como um usuário linux por muito tempo, eu automatizei algumas tarefas com scripts bash e fiquei longe do PowerShell... Voltei a utilizar Windows alguns anos atrás e ainda assim, não dei uma chance ao PS. Mas porque não? Eu fiz alguns scripts para automatizar algumas tarefas em um servidor Protheus.&lt;/p&gt;
&lt;p&gt;Eu acabei achando os scripts PS de fácil leitura e entendimento. Abaixo, nós temos um script para remover arquivos filtrando pela sua extensão (ou sem extensão alguma no caso do script em questão).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Get-ChildItem&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\TOTVS\protheus_data\system&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-File&lt;/span&gt; &lt;span class="n"&gt;-Filter&lt;/span&gt; &lt;span class="p"&gt;*.&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Move-Item&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt; &lt;span class="n"&gt;-Destination&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="cm"&gt;&amp;lt;# Diretório ao qual os arquivos vão ser movidos. Você pode utilizar formatos de data para nomear os diretórios #&amp;gt;&lt;/span&gt;
    &lt;span class="cm"&gt;&amp;lt;# LastWriteTime é a propriedade do arquivo corrent #&amp;gt;&lt;/span&gt;
    &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;C:\bad_files\{0:yyyy\\MM\\dd}&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-f&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastWriteTime&lt;/span&gt;
    &lt;span class="nv"&gt;$null&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="nv"&gt;$dir&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt; 
    &lt;span class="s2"&gt;&amp;quot;$dir\&lt;/span&gt;&lt;span class="p"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Você já precisou remover arquivos baseado no conteúdo de outro arquivo? Abaixo um script onde eu leio um arquivo que contem os nomes de arquivos que eu desejo remover. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;foreach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;Get-Content&lt;/span&gt; &lt;span class="p"&gt;.\&lt;/span&gt;&lt;span class="n"&gt;Desktop&lt;/span&gt;&lt;span class="p"&gt;\&lt;/span&gt;&lt;span class="n"&gt;bad_files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Test-Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\\x.y.z.a\c$\TOTVS\protheus_data\xmls\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;Remove-Item&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\\x.y.z.a\c$\TOTVS\protheus_data\xmls\&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="p"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; - File not found&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;E um script bonus para parar e iniciar serviços (se você gerencia um servidor Protheus, você sabe o porque eu faço isto).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$servicesNames&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;app_main&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;app_worker5&amp;#39;&lt;/span&gt;

&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Parando Serviços&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--------------------------&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$srv&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$servicesNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Parando: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;
    &lt;span class="nv"&gt;$SrvPID&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;get-wmiobject&lt;/span&gt; &lt;span class="n"&gt;win32_service&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;where &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;-eq&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="n"&gt;processID&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PID: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$SrvPID&lt;/span&gt;

    &lt;span class="cm"&gt;&amp;lt;# Força a parada caso o serviço esteja travado #&amp;gt;&lt;/span&gt;
    &lt;span class="nb"&gt;Stop-Process&lt;/span&gt; &lt;span class="nv"&gt;$ServicePID&lt;/span&gt; &lt;span class="n"&gt;-Force&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;PDI &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$SrvPID&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; parado&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Inicializando Serviços&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--------------------------&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$srv&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;$servicesNames&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;Write-host&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Inicializando: &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;
    &lt;span class="nb"&gt;Start-Service&lt;/span&gt; &lt;span class="nv"&gt;$srv&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Você tem algum script de automação? Compartilhe conosco :)&lt;/p&gt;</content><category term="PowerShell"></category><category term="Azure"></category><category term="PowerShell"></category><category term="Script"></category><category term="GetChild-Item"></category><category term="Remove-Item"></category><category term="Stop-Proccess"></category></entry></feed>